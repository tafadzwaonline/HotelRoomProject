@page "/HotelRoom/Create"
@using Models
@using BusinessLayer.Repository.IRepository
@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigationManager

<div class="row mt-2 mb-5">
    
    <h3 class="card-title text-info mb-3 m-lg-3">@Title Hotel Room</h3>

    <div class="card">
        <div class="card-body">

            <EditForm Model="HotelRoomModel" OnValidSubmit="HandleHotelRoomUpsert">

               <DataAnnotationsValidator/>
              @*  <ValidationSummary/>*@  @*This will display the validation summary at the top of the form*@
                <div class="form-group">
                    <label>Name</label>
                    <InputText class="form-control" @bind-Value="HotelRoomModel.Name" />
                    <ValidationMessage For="()=>HotelRoomModel.Name"></ValidationMessage>
                </div>
                 <div class="form-group">
                    <label>Occupancy</label>
                    <InputNumber class="form-control" @bind-Value="HotelRoomModel.Occupancy" />
                    <ValidationMessage For="()=>HotelRoomModel.Occupancy"></ValidationMessage>

                </div>
                <div class="form-group">
                    <label>Rate</label>
                    <InputNumber class="form-control" @bind-Value="HotelRoomModel.RegularRate" />
                    <ValidationMessage For="()=>HotelRoomModel.RegularRate"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Sq Ft</label>
                    <InputText class="form-control" @bind-Value="HotelRoomModel.SqFt" />
                    <ValidationMessage For="()=>HotelRoomModel.SqFt"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Details</label>
                    <InputTextArea class="form-control" @bind-Value="HotelRoomModel.Details" />
                    <ValidationMessage For="()=>HotelRoomModel.Details"></ValidationMessage>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary">@Title Room</button>
                    <NavLink href="HotelRoom" class="btn btn-secondary">Back To Index</NavLink>
                </div>
            </EditForm>
        </div>
    </div>
    
</div>

@code {

    private HotelRoomDTO HotelRoomModel { get; set; } = new HotelRoomDTO();

    private string Title { get; set; } = "Create";

    private async Task HandleHotelRoomUpsert()
    {
        var roomDetailsByName = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name);

        if (roomDetailsByName != null)
        {
            //There is a duplicate room name

            return;

        }

        var createdResult = await HotelRoomRepository.CreateHotelRoom(HotelRoomModel);

        NavigationManager.NavigateTo("HotelRoom");
    }
}
